Index: src/use_case/dashboard/DashboardInputBoundary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package use_case.dashboard;\n\npublic interface DashboardInputBoundary {\n    void execute(DashboardInputData inputData);\n    void switchToUpdateProfile();\n    void switchToMealPlanner();\n    void switchToMealRecorder();\n}\n
===================================================================
diff --git a/src/use_case/dashboard/DashboardInputBoundary.java b/src/use_case/dashboard/DashboardInputBoundary.java
--- a/src/use_case/dashboard/DashboardInputBoundary.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/use_case/dashboard/DashboardInputBoundary.java	(date 1732861876355)
@@ -4,5 +4,5 @@
     void execute(DashboardInputData inputData);
     void switchToUpdateProfile();
     void switchToMealPlanner();
-    void switchToMealRecorder();
+    void switchToCustomizeMeal();
 }
Index: src/use_case/dashboard/DashboardOutputBoundary.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package use_case.dashboard;\n\npublic interface DashboardOutputBoundary {\n    void prepareSuccessView(DashboardOutputData outputData);\n    void prepareSwitchToInfoCollection();\n    void prepareFailView(String error);\n}
===================================================================
diff --git a/src/use_case/dashboard/DashboardOutputBoundary.java b/src/use_case/dashboard/DashboardOutputBoundary.java
--- a/src/use_case/dashboard/DashboardOutputBoundary.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/use_case/dashboard/DashboardOutputBoundary.java	(date 1732861702044)
@@ -3,5 +3,6 @@
 public interface DashboardOutputBoundary {
     void prepareSuccessView(DashboardOutputData outputData);
     void prepareSwitchToInfoCollection();
+    void prepareSwitchToCustomize();
     void prepareFailView(String error);
 }
\ No newline at end of file
Index: src/view/DashboardView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\n\nimport interface_adapter.dashboard.*;\nimport interface_adapter.logout.LogoutController;\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.beans.PropertyChangeEvent;\nimport java.beans.PropertyChangeListener;\n\npublic class DashboardView extends JPanel implements ActionListener, PropertyChangeListener {\n    public final String viewName = \"dashboard\";\n    private final DashboardViewModel dashboardViewModel;\n    private DashboardController dashboardController;\n    private LogoutController logoutController;\n\n    // UI Components\n    private final JLabel titleLabel;\n    private final JLabel welcomeLabel;\n    private final JLabel activityLabel;\n    private final NutritionProgressPanel nutritionPanel;\n    private final JButton updateProfileButton;\n    private final JButton generateMealButton;\n    private final JButton recordMealButton;\n    private final JButton logoutButton;\n    private final JLabel errorLabel;\n\n    public DashboardView(DashboardViewModel viewModel) {\n        this.dashboardViewModel = viewModel;\n        this.dashboardViewModel.addPropertyChangeListener(this);\n\n        // Use simple BorderLayout as base\n        setLayout(new BorderLayout());\n        setBorder(BorderFactory.createEmptyBorder(20, 20, 20, 20));\n\n        // Initialize components\n        titleLabel = new JLabel(DashboardViewModel.TITLE_LABEL);\n        welcomeLabel = new JLabel();\n        activityLabel = new JLabel();\n        nutritionPanel = new NutritionProgressPanel();\n        updateProfileButton = new JButton(DashboardViewModel.UPDATE_PROFILE_BUTTON_LABEL);\n        generateMealButton = new JButton(DashboardViewModel.GENERATE_MEAL_BUTTON_LABEL);\n        recordMealButton = new JButton(DashboardViewModel.RECORD_MEAL_BUTTON_LABEL);\n        logoutButton = new JButton(\"Logout\");\n        errorLabel = new JLabel();\n\n        // Style components\n        styleComponents();\n\n        // Layout components using the simplified approach\n        layoutComponents();\n\n        // Add listeners\n        addListeners();\n    }\n\n    private void styleComponents() {\n        // Title styling\n        titleLabel.setFont(new Font(titleLabel.getFont().getName(), Font.BOLD, 24));\n        titleLabel.setHorizontalAlignment(SwingConstants.CENTER);\n\n        // Welcome label styling\n        welcomeLabel.setFont(new Font(welcomeLabel.getFont().getName(), Font.BOLD, 18));\n\n        // Activity label styling\n        activityLabel.setFont(new Font(activityLabel.getFont().getName(), Font.PLAIN, 14));\n\n        // Error label styling\n        errorLabel.setForeground(Color.RED);\n        errorLabel.setHorizontalAlignment(SwingConstants.CENTER);\n\n        // Button styling - keep buttons at fixed size\n        Dimension buttonSize = new Dimension(150, 40);\n        updateProfileButton.setPreferredSize(buttonSize);\n        generateMealButton.setPreferredSize(buttonSize);\n        recordMealButton.setPreferredSize(buttonSize);\n        logoutButton.setPreferredSize(buttonSize);\n    }\n\n    private void layoutComponents() {\n        // Header panel using BoxLayout\n        JPanel headerPanel = new JPanel();\n        headerPanel.setLayout(new BoxLayout(headerPanel, BoxLayout.Y_AXIS));\n        titleLabel.setAlignmentX(Component.CENTER_ALIGNMENT);\n        welcomeLabel.setAlignmentX(Component.CENTER_ALIGNMENT);\n        activityLabel.setAlignmentX(Component.CENTER_ALIGNMENT);\n        headerPanel.add(titleLabel);\n        headerPanel.add(Box.createVerticalStrut(10));\n        headerPanel.add(welcomeLabel);\n        headerPanel.add(Box.createVerticalStrut(5));\n        headerPanel.add(activityLabel);\n\n        // Button panel using GridLayout like in simplified version\n        JPanel buttonPanel = new JPanel(new GridLayout(1, 4, 10, 0));\n        buttonPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));\n        buttonPanel.add(updateProfileButton);\n        buttonPanel.add(generateMealButton);\n        buttonPanel.add(recordMealButton);\n        buttonPanel.add(logoutButton);\n\n        // Add everything to main panel\n        add(headerPanel, BorderLayout.NORTH);\n        add(nutritionPanel, BorderLayout.CENTER);\n        add(buttonPanel, BorderLayout.SOUTH);\n    }\n\n    private void addListeners() {\n        updateProfileButton.addActionListener(this);\n        generateMealButton.addActionListener(this);\n        recordMealButton.addActionListener(this);\n        logoutButton.addActionListener(this);\n    }\n\n    @Override\n    public void actionPerformed(ActionEvent evt) {\n        if (evt.getSource() == updateProfileButton) {\n            dashboardController.onUpdateProfile();\n        } else if (evt.getSource() == generateMealButton) {\n            dashboardController.onGenerateMeal();\n        } else if (evt.getSource() == recordMealButton) {\n            dashboardController.onRecordMeal();\n        } else if (evt.getSource() == logoutButton && logoutController != null) {\n            String username = welcomeLabel.getText().replace(\"Welcome, \", \"\");\n            logoutController.execute(username);\n        }\n    }\n\n    @Override\n    public void propertyChange(PropertyChangeEvent evt) {\n        if (evt.getPropertyName().equals(\"state\")) {\n            updateFromViewModel();\n        }\n    }\n\n    private void updateFromViewModel() {\n        DashboardState state = (DashboardState) dashboardViewModel.getState();\n        if (state != null) {\n            welcomeLabel.setText(DashboardViewModel.WELCOME_LABEL + state.getUsername());\n            activityLabel.setText(\"Activity Level: \" + state.getActivityLevel());\n            errorLabel.setText(state.getError());\n\n            nutritionPanel.updateProgress(\n                    state.getCaloriePercentage(),\n                    state.getCarbsPercentage(),\n                    state.getProteinPercentage(),\n                    state.getFatPercentage(),\n                    state.getFormattedCalorieProgress(),\n                    state.getFormattedCarbsProgress(),\n                    state.getFormattedProteinProgress(),\n                    state.getFormattedFatProgress()\n            );\n        }\n    }\n\n    public void setDashboardController(DashboardController controller) {\n        this.dashboardController = controller;\n    }\n\n    public void setLogoutController(LogoutController controller) {\n        this.logoutController = controller;\n    }\n\n    public String getViewName() {\n        return viewName;\n    }\n}
===================================================================
diff --git a/src/view/DashboardView.java b/src/view/DashboardView.java
--- a/src/view/DashboardView.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/view/DashboardView.java	(date 1732863438524)
@@ -1,5 +1,6 @@
 package view;
 
+import interface_adapter.customize.CustomizeViewModel;
 import interface_adapter.dashboard.*;
 import interface_adapter.logout.LogoutController;
 import javax.swing.*;
@@ -22,7 +23,7 @@
     private final NutritionProgressPanel nutritionPanel;
     private final JButton updateProfileButton;
     private final JButton generateMealButton;
-    private final JButton recordMealButton;
+    private final JButton customizeMealButton;
     private final JButton logoutButton;
     private final JLabel errorLabel;
 
@@ -41,7 +42,7 @@
         nutritionPanel = new NutritionProgressPanel();
         updateProfileButton = new JButton(DashboardViewModel.UPDATE_PROFILE_BUTTON_LABEL);
         generateMealButton = new JButton(DashboardViewModel.GENERATE_MEAL_BUTTON_LABEL);
-        recordMealButton = new JButton(DashboardViewModel.RECORD_MEAL_BUTTON_LABEL);
+        customizeMealButton = new JButton(DashboardViewModel.RECORD_MEAL_BUTTON_LABEL);
         logoutButton = new JButton("Logout");
         errorLabel = new JLabel();
 
@@ -74,7 +75,7 @@
         Dimension buttonSize = new Dimension(150, 40);
         updateProfileButton.setPreferredSize(buttonSize);
         generateMealButton.setPreferredSize(buttonSize);
-        recordMealButton.setPreferredSize(buttonSize);
+        customizeMealButton.setPreferredSize(buttonSize);
         logoutButton.setPreferredSize(buttonSize);
     }
 
@@ -96,7 +97,7 @@
         buttonPanel.setBorder(BorderFactory.createEmptyBorder(10, 10, 10, 10));
         buttonPanel.add(updateProfileButton);
         buttonPanel.add(generateMealButton);
-        buttonPanel.add(recordMealButton);
+        buttonPanel.add(customizeMealButton);
         buttonPanel.add(logoutButton);
 
         // Add everything to main panel
@@ -108,7 +109,11 @@
     private void addListeners() {
         updateProfileButton.addActionListener(this);
         generateMealButton.addActionListener(this);
-        recordMealButton.addActionListener(this);
+//        recordMealButton.addActionListener(this);
+//        customizeMealButton.addActionListener(e -> {
+//            launchFoodCustomizeDialog();
+//        });
+        customizeMealButton.addActionListener(this);
         logoutButton.addActionListener(this);
     }
 
@@ -118,8 +123,8 @@
             dashboardController.onUpdateProfile();
         } else if (evt.getSource() == generateMealButton) {
             dashboardController.onGenerateMeal();
-        } else if (evt.getSource() == recordMealButton) {
-            dashboardController.onRecordMeal();
+        } else if (evt.getSource() == customizeMealButton) {
+            launchFoodCustomizeDialog();
         } else if (evt.getSource() == logoutButton && logoutController != null) {
             String username = welcomeLabel.getText().replace("Welcome, ", "");
             logoutController.execute(username);
@@ -164,4 +169,49 @@
     public String getViewName() {
         return viewName;
     }
+
+
+    private void launchFoodCustomizeDialog() {
+        DashboardState currentState = (DashboardState) dashboardViewModel.getState();
+
+        JDialog customizeDialog = new JDialog(
+                (Frame) SwingUtilities.getWindowAncestor(this),
+                "Customize Meal",
+                true
+        );
+
+        CustomizeViewModel customizeViewModel = new CustomizeViewModel();
+        CustomizeView customizeView = new CustomizeView(customizeViewModel);
+
+        customizeDialog.setContentPane(customizeView);
+        customizeDialog.setSize(600, 400);
+        customizeDialog.setLocationRelativeTo(this);
+        customizeDialog.setVisible(true);
+    }
+
+//    private void updateNutritionProgress(Map<String, List<Food>> addedFoods) {
+//        DashboardState currentState = (DashboardState) dashboardViewModel.getState();
+//        double currentCalories = currentState.getConsumedCalories();
+//        double currentCarbs = currentState.getConsumedCarbs();
+//        double currentProtein = currentState.getConsumedProtein();
+//        double currentFat = currentState.getConsumedFat();
+//
+//        for (List<Food> mealFoods : addedFoods.values()) {
+//            for (Food food : mealFoods) {
+//                Map<String, Double> nutrients = food.getNutrients();
+//                currentCalories += nutrients.getOrDefault("ENERC_KCAL", 0.0);
+//                currentCarbs += nutrients.getOrDefault("CHOCDF", 0.0);
+//                currentProtein += nutrients.getOrDefault("PROCNT", 0.0);
+//                currentFat += nutrients.getOrDefault("FAT", 0.0);
+//            }
+//        }
+//
+//        currentState.setConsumedCalories(currentCalories);
+//        currentState.setConsumedCarbs(currentCarbs);
+//        currentState.setConsumedProtein(currentProtein);
+//        currentState.setConsumedFat(currentFat);
+//
+//        dashboardViewModel.setState(currentState);
+//        dashboardViewModel.firePropertyChanged();
+//    }
 }
\ No newline at end of file
Index: src/use_case/dashboard/DashboardInteractor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package use_case.dashboard;\n\nimport entity.CommonUser;\nimport entity.Food;\nimport entity.MealType;\nimport use_case.dashboard.*;\n\n\nimport java.util.HashSet;\nimport java.util.Map;\n\npublic class DashboardInteractor implements DashboardInputBoundary {\n    final DashboardDataAccessInterface userDataAccessObject;\n    final DashboardOutputBoundary dashboardPresenter;\n\n    public DashboardInteractor(DashboardDataAccessInterface userDataAccessInterface,\n                               DashboardOutputBoundary outputBoundary) {\n        this.userDataAccessObject = userDataAccessInterface;\n        this.dashboardPresenter = outputBoundary;\n    }\n\n    @Override\n    public void execute(DashboardInputData dashboardInputData) {\n        try {\n            if (!userDataAccessObject.existsByName(dashboardInputData.getUsername())) {\n                dashboardPresenter.prepareFailView(\"User not found.\");\n                return;\n            }\n\n            CommonUser user = (CommonUser) userDataAccessObject.get(dashboardInputData.getUsername());\n\n            // Update user's nutrition progress\n            userDataAccessObject.updateNutritionProgress(\n                    dashboardInputData.getUsername(),\n                    dashboardInputData.getConsumedCalories(),\n                    dashboardInputData.getConsumedCarbs(),\n                    dashboardInputData.getConsumedProtein(),\n                    dashboardInputData.getConsumedFat()\n            );\n\n            // Calculate nutrition goals based on user data\n            double bmr = user.calculateBMR();\n            double tdee = user.calculateTDEE();\n            double carbsGoal = user.calculateCarbsGrams();\n            double proteinGoal = user.calculateProteinGrams();\n            double fatGoal = user.calculateFatGrams();\n\n            DashboardOutputData dashboardOutputData = new DashboardOutputData(\n                    user.getName(),\n                    bmr,\n                    tdee,\n                    carbsGoal,\n                    proteinGoal,\n                    fatGoal,\n                    dashboardInputData.getConsumedCalories(),\n                    dashboardInputData.getConsumedCarbs(),\n                    dashboardInputData.getConsumedProtein(),\n                    dashboardInputData.getConsumedFat(),\n                    user.getActivityLevel(),\n                    user.getAllergies(),\n                    true\n            );\n\n            dashboardPresenter.prepareSuccessView(dashboardOutputData);\n\n        } catch (Exception e) {\n            dashboardPresenter.prepareFailView(e.getMessage());\n        }\n    }\n\n    @Override\n    public void switchToUpdateProfile() {\n        dashboardPresenter.prepareSwitchToInfoCollection();\n    }\n\n\n    @Override\n    public void switchToMealPlanner() {\n        // Similar to switchToUpdateProfile, prepare for view transition\n        dashboardPresenter.prepareSuccessView(\n                new DashboardOutputData(\"\", 0, 0, 0, 0, 0, 0, 0, 0, 0, \"\", new HashSet<>(), true)\n        );\n    }\n\n    @Override\n    public void switchToMealRecorder() {\n        // Similar to switchToUpdateProfile, prepare for view transition\n        dashboardPresenter.prepareSuccessView(\n                new DashboardOutputData(\"\", 0, 0, 0, 0, 0, 0, 0, 0, 0, \"\", new HashSet<>(), true)\n        );\n    }\n}
===================================================================
diff --git a/src/use_case/dashboard/DashboardInteractor.java b/src/use_case/dashboard/DashboardInteractor.java
--- a/src/use_case/dashboard/DashboardInteractor.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/use_case/dashboard/DashboardInteractor.java	(date 1732861903696)
@@ -83,10 +83,8 @@
     }
 
     @Override
-    public void switchToMealRecorder() {
-        // Similar to switchToUpdateProfile, prepare for view transition
-        dashboardPresenter.prepareSuccessView(
-                new DashboardOutputData("", 0, 0, 0, 0, 0, 0, 0, 0, 0, "", new HashSet<>(), true)
-        );
+    public void switchToCustomizeMeal() {
+        dashboardPresenter.prepareSwitchToCustomize();
     }
+
 }
\ No newline at end of file
Index: src/interface_adapter/dashboard/DashboardController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.dashboard;\n\nimport entity.Allergy;\nimport entity.Food;\nimport entity.MealType;\nimport use_case.dashboard.DashboardInputBoundary;\nimport use_case.dashboard.DashboardInputData;\n\nimport java.time.LocalDate;\nimport java.util.Set;\n\npublic class DashboardController {\n    private final DashboardInputBoundary dashboardUseCaseInteractor;\n\n    public DashboardController(DashboardInputBoundary dashboardUseCaseInteractor) {\n        this.dashboardUseCaseInteractor = dashboardUseCaseInteractor;\n    }\n\n    public void execute(String username, LocalDate birthDate, String gender,\n                        int weight, int height, double activityMultiplier,\n                        Set<Allergy> allergies, double consumedCalories,\n                        double consumedCarbs, double consumedProtein,\n                        double consumedFat) {\n\n        DashboardInputData dashboardInputData = new DashboardInputData(\n                username, birthDate, gender, weight, height, activityMultiplier,\n                allergies, consumedCalories, consumedCarbs, consumedProtein, consumedFat\n        );\n\n        dashboardUseCaseInteractor.execute(dashboardInputData);\n    }\n\n    public void onUpdateProfile() {\n        dashboardUseCaseInteractor.switchToUpdateProfile();\n    }\n\n    public void onGenerateMeal() {\n        dashboardUseCaseInteractor.switchToMealPlanner();\n    }\n\n    public void onRecordMeal() {\n        dashboardUseCaseInteractor.switchToMealRecorder();\n    }\n}
===================================================================
diff --git a/src/interface_adapter/dashboard/DashboardController.java b/src/interface_adapter/dashboard/DashboardController.java
--- a/src/interface_adapter/dashboard/DashboardController.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/interface_adapter/dashboard/DashboardController.java	(date 1732861737032)
@@ -38,7 +38,11 @@
         dashboardUseCaseInteractor.switchToMealPlanner();
     }
 
-    public void onRecordMeal() {
-        dashboardUseCaseInteractor.switchToMealRecorder();
+//    public void onRecordMeal() {
+//        dashboardUseCaseInteractor.switchToMealRecorder();
+//    }
+
+    public void onCustomizeMeal() {
+        dashboardUseCaseInteractor.switchToCustomizeMeal();
     }
 }
\ No newline at end of file
Index: src/data_access/FoodDatabaseAccessObject.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package data_access;\n\nimport java.net.URI;\nimport java.net.http.HttpClient;\nimport java.net.http.HttpRequest;\nimport java.net.http.HttpResponse;\nimport org.json.JSONObject;\nimport org.json.JSONArray;\n\npublic class FoodDatabaseAccessObject {\n    private final String APP_ID = \"f4d052b7\";\n    private final String APP_KEY = \"46cfeab6f40ed5e084106e0870f61131%09\";\n    private final String BASE_URL = \"https://api.edamam.com/api/food-database/v2\";\n    private final HttpClient httpClient;\n\n    public FoodDatabaseAccessObject() {\n        this.httpClient = HttpClient.newHttpClient();\n    }\n\n    public JSONObject searchFood() throws Exception {\n        String endpoint = String.format(\"%s/parser?app_id=%s&app_key=%s&nutrition-type=logging\",\n                BASE_URL, APP_ID, APP_KEY);\n\n        HttpRequest request = HttpRequest.newBuilder()\n                .uri(URI.create(endpoint))\n                .header(\"accept\", \"application/json\")\n                .GET()\n                .build();\n\n        HttpResponse<String> response = httpClient.send(request,\n                HttpResponse.BodyHandlers.ofString());\n\n        if (response.statusCode() != 200) {\n            throw new Exception(\"API request failed with status: \" + response.statusCode());\n        }\n\n        return new JSONObject(response.body());\n    }\n\n    public JSONObject searchFoodWithIngredient(String ingredient) throws Exception {\n        String encodedIngredient = java.net.URLEncoder.encode(ingredient, \"UTF-8\");\n        String endpoint = String.format(\"%s/parser?app_id=%s&app_key=%s&nutrition-type=logging&ingr=%s\",\n                BASE_URL, APP_ID, APP_KEY, encodedIngredient);\n\n        HttpRequest request = HttpRequest.newBuilder()\n                .uri(URI.create(endpoint))\n                .header(\"accept\", \"application/json\")\n                .GET()\n                .build();\n\n        HttpResponse<String> response = httpClient.send(request,\n                HttpResponse.BodyHandlers.ofString());\n\n        if (response.statusCode() != 200) {\n            throw new Exception(\"API request failed with status: \" + response.statusCode());\n        }\n\n        return new JSONObject(response.body());\n    }\n\n    // parse food items from response\n    public void printFoodItems(JSONObject response) {\n        JSONArray hints = response.getJSONArray(\"hints\");\n        for (int i = 0; i < hints.length(); i++) {\n            JSONObject food = hints.getJSONObject(i).getJSONObject(\"food\");\n            System.out.println(\"Label: \" + food.getString(\"label\"));\n            System.out.println(\"Category: \" + food.optString(\"category\", \"N/A\"));\n\n            JSONObject nutrients = food.getJSONObject(\"nutrients\");\n            System.out.println(\"Nutrients:\");\n            System.out.println(\"  - ENERC_KCAL: \" + nutrients.optDouble(\"ENERC_KCAL\", 0.0));\n            System.out.println(\"  - PROCNT: \" + nutrients.optDouble(\"PROCNT\", 0.0));\n            System.out.println(\"  - FAT: \" + nutrients.optDouble(\"FAT\", 0.0));\n            System.out.println(\"  - CHOCDF: \" + nutrients.optDouble(\"CHOCDF\", 0.0));\n            System.out.println(\"--------------------\");\n        }\n    }\n}
===================================================================
diff --git a/src/data_access/FoodDatabaseAccessObject.java b/src/data_access/FoodDatabaseAccessObject.java
--- a/src/data_access/FoodDatabaseAccessObject.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/data_access/FoodDatabaseAccessObject.java	(date 1732872895784)
@@ -1,3 +1,473 @@
+//package data_access;
+//
+//import java.net.URI;
+//import java.net.http.HttpClient;
+//import java.net.http.HttpRequest;
+//import java.net.http.HttpResponse;
+//import java.util.ArrayList;
+//import java.util.HashMap;
+//import java.util.List;
+//import java.util.Map;
+//
+//import entity.Food;
+//import org.json.JSONObject;
+//import org.json.JSONArray;
+//import util.ApiConfig;
+
+//public class FoodDatabaseAccessObject {
+//    private final String APP_ID = "f4d052b7";
+//    private final String APP_KEY = "46cfeab6f40ed5e084106e0870f61131%09";
+//    private final String BASE_URL = "https://api.edamam.com/api/food-database/v2";
+//    private final HttpClient httpClient;
+//
+//    public FoodDatabaseAccessObject() {
+//        this.httpClient = HttpClient.newHttpClient();
+//    }
+//
+//    public JSONObject searchFood() throws Exception {
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&nutrition-type=logging",
+//                BASE_URL, APP_ID, APP_KEY);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        return new JSONObject(response.body());
+//    }
+//
+//    public JSONObject searchFoodWithIngredient(String ingredient) throws Exception {
+//        String encodedIngredient = java.net.URLEncoder.encode(ingredient, "UTF-8");
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&nutrition-type=logging&ingr=%s",
+//                BASE_URL, APP_ID, APP_KEY, encodedIngredient);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        return new JSONObject(response.body());
+//    }
+//
+//    // parse food items from response
+//    public void printFoodItems(JSONObject response) {
+//        JSONArray hints = response.getJSONArray("hints");
+//        for (int i = 0; i < hints.length(); i++) {
+//            JSONObject food = hints.getJSONObject(i).getJSONObject("food");
+//            System.out.println("Label: " + food.getString("label"));
+//            System.out.println("Category: " + food.optString("category", "N/A"));
+//
+//            JSONObject nutrients = food.getJSONObject("nutrients");
+//            System.out.println("Nutrients:");
+//            System.out.println("  - ENERC_KCAL: " + nutrients.optDouble("ENERC_KCAL", 0.0));
+//            System.out.println("  - PROCNT: " + nutrients.optDouble("PROCNT", 0.0));
+//            System.out.println("  - FAT: " + nutrients.optDouble("FAT", 0.0));
+//            System.out.println("  - CHOCDF: " + nutrients.optDouble("CHOCDF", 0.0));
+//            System.out.println("--------------------");
+//        }
+//    }
+//}
+
+//public class FoodDatabaseAccessObject {
+//    private final String APP_ID;
+//    private final String APP_KEY;
+//    private final String BASE_URL = "https://api.edamam.com/api/food-database/v2";
+//    private final HttpClient httpClient;
+//
+//    public FoodDatabaseAccessObject() {
+//        this.APP_ID = ApiConfig.getEdamamAppId();
+//        this.APP_KEY = ApiConfig.getEdamamAppKey();
+//        this.httpClient = HttpClient.newHttpClient();
+//    }
+//
+//    public List<Food> searchFoodWithIngredient(String ingredient) throws Exception {
+//        String encodedIngredient = java.net.URLEncoder.encode(ingredient, "UTF-8");
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&nutrition-type=logging&ingr=%s",
+//                BASE_URL, APP_ID, APP_KEY, encodedIngredient);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        JSONObject responseBody = new JSONObject(response.body());
+//        return parseSearchResults(responseBody);
+//    }
+//
+//    private List<Food> parseSearchResults(JSONObject response) {
+//        List<Food> foods = new ArrayList<>();
+//        JSONArray hints = response.getJSONArray("hints");
+//
+//        for (int i = 0; i < Math.min(hints.length(), 3); i++) {
+//            JSONObject foodData = hints.getJSONObject(i).getJSONObject("food");
+//
+//            String foodId = foodData.getString("foodId");
+//            String label = foodData.getString("label");
+//            String category = foodData.optString("category", "Unknown");
+//
+//            Map<String, Double> nutrients = new HashMap<>();
+//            JSONObject nutrientsJson = foodData.getJSONObject("nutrients");
+//            nutrients.put("ENERC_KCAL", nutrientsJson.optDouble("ENERC_KCAL", 0.0));
+//            nutrients.put("PROCNT", nutrientsJson.optDouble("PROCNT", 0.0));
+//            nutrients.put("FAT", nutrientsJson.optDouble("FAT", 0.0));
+//            nutrients.put("CHOCDF", nutrientsJson.optDouble("CHOCDF", 0.0));
+//
+//            foods.add(new Food(foodId, label, category, nutrients));
+//        }
+//
+//        return foods;
+//    }
+//}
+
+
+
+//package data_access;
+//
+//import java.net.URI;
+//import java.net.http.HttpClient;
+//import java.net.http.HttpRequest;
+//import java.net.http.HttpResponse;
+//import java.util.ArrayList;
+//import java.util.HashMap;
+//import java.util.List;
+//import java.util.Map;
+//
+//import entity.Food;
+//import org.json.JSONObject;
+//import org.json.JSONArray;
+//
+//public class FoodDatabaseAccessObject {
+//    private final String APP_ID;
+//    private final String APP_KEY;
+//    private final String BASE_URL = "https://api.edamam.com/api/food-database/v2";
+//    private final HttpClient httpClient;
+//
+//    public FoodDatabaseAccessObject() {
+//        // Get API credentials from config
+//        this.APP_ID = "f4d052b7";
+//        this.APP_KEY = "46cfeab6f40ed5e084106e0870f61131";
+//        this.httpClient = HttpClient.newHttpClient();
+//    }
+//
+//    public List<Food> searchFoodWithIngredient(String ingredient) throws Exception {
+//        // URL encode the ingredient for proper API request
+//        String encodedIngredient = java.net.URLEncoder.encode(ingredient, "UTF-8");
+//
+//        // Construct the API endpoint URL
+//        // Note: Remove the %09 from the end of APP_KEY as it's causing the API error
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&ingr=%s&nutrition-type=logging",
+//                BASE_URL, APP_ID, APP_KEY, encodedIngredient);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        return parseSearchResults(new JSONObject(response.body()));
+//    }
+//
+//    private List<Food> parseSearchResults(JSONObject response) {
+//        List<Food> foods = new ArrayList<>();
+//        JSONArray hints = response.getJSONArray("hints");
+//
+//        // Only process up to 3 results
+//        for (int i = 0; i < Math.min(hints.length(), 3); i++) {
+//            JSONObject foodData = hints.getJSONObject(i).getJSONObject("food");
+//
+//            String foodId = foodData.getString("foodId");
+//            String label = foodData.getString("label");
+//            String category = foodData.optString("category", "Unknown");
+//
+//            // Extract nutrients
+//            Map<String, Double> nutrients = new HashMap<>();
+//            JSONObject nutrientsJson = foodData.getJSONObject("nutrients");
+//            nutrients.put("ENERC_KCAL", nutrientsJson.optDouble("ENERC_KCAL", 0.0));
+//            nutrients.put("PROCNT", nutrientsJson.optDouble("PROCNT", 0.0));
+//            nutrients.put("FAT", nutrientsJson.optDouble("FAT", 0.0));
+//            nutrients.put("CHOCDF", nutrientsJson.optDouble("CHOCDF", 0.0));
+//
+//            foods.add(new Food(foodId, label, category, nutrients));
+//        }
+//
+//        return foods;
+//    }
+//}
+
+//package data_access;
+//
+//import java.net.URI;
+//import java.net.http.HttpClient;
+//import java.net.http.HttpRequest;
+//import java.net.http.HttpResponse;
+//import java.util.ArrayList;
+//import java.util.HashMap;
+//import java.util.List;
+//import java.util.Map;
+//
+//import entity.Food;
+//import org.json.JSONObject;
+//import org.json.JSONArray;
+//import util.ApiConfig;
+//
+//public class FoodDatabaseAccessObject {
+//    private final String APP_ID;
+//    private final String APP_KEY;
+//    private final String BASE_URL = "https://api.edamam.com/api/food-database/v2";
+//    private final HttpClient httpClient;
+//
+//    public FoodDatabaseAccessObject() {
+//        this.APP_ID = ApiConfig.getEdamamAppId();
+//        this.APP_KEY = ApiConfig.getEdamamAppKey();
+//        this.httpClient = HttpClient.newHttpClient();
+//    }
+//
+//    public List<Food> searchFoodWithIngredient(String ingredient) throws Exception {
+//        String encodedIngredient = java.net.URLEncoder.encode(ingredient, "UTF-8");
+//
+//        // Construct URL with all relevant parameters from the API documentation
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&ingr=%s" +
+//                        "&nutrition-type=logging&category=generic-foods,packaged-foods",
+//                BASE_URL, APP_ID, APP_KEY, encodedIngredient);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("Accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            String errorMessage = String.format("API request failed: Status %d, Response: %s",
+//                    response.statusCode(), response.body());
+//            throw new Exception(errorMessage);
+//        }
+//
+//        JSONObject responseBody = new JSONObject(response.body());
+//        return parseSearchResults(responseBody);
+//    }
+//
+//    private List<Food> parseSearchResults(JSONObject response) {
+//        List<Food> foods = new ArrayList<>();
+//        JSONArray hints = response.getJSONArray("hints");
+//
+//        for (int i = 0; i < Math.min(hints.length(), 3); i++) {
+//            try {
+//                JSONObject foodItem = hints.getJSONObject(i);
+//                JSONObject foodData = foodItem.getJSONObject("food");
+//
+//                String foodId = foodData.optString("foodId", "unknown");
+//                String label = foodData.optString("label", "Unknown Food");
+//                String category = foodData.optString("category", "Generic");
+//
+//                Map<String, Double> nutrients = new HashMap<>();
+//                if (foodData.has("nutrients")) {
+//                    JSONObject nutrientsJson = foodData.getJSONObject("nutrients");
+//                    // Parse all available nutrients
+//                    nutrients.put("ENERC_KCAL", nutrientsJson.optDouble("ENERC_KCAL", 0.0)); // Energy
+//                    nutrients.put("PROCNT", nutrientsJson.optDouble("PROCNT", 0.0));         // Protein
+//                    nutrients.put("FAT", nutrientsJson.optDouble("FAT", 0.0));               // Total Fat
+//                    nutrients.put("CHOCDF", nutrientsJson.optDouble("CHOCDF", 0.0));         // Carbs
+//                    nutrients.put("FIBTG", nutrientsJson.optDouble("FIBTG", 0.0));           // Fiber
+//                }
+//
+//                foods.add(new Food(foodId, label, category, nutrients));
+//            } catch (Exception e) {
+//                System.err.println("Error parsing food item: " + e.getMessage());
+//                // Continue with next item instead of breaking the whole operation
+//                continue;
+//            }
+//        }
+//
+//        return foods;
+//    }
+//}
+
+
+//package data_access;
+//
+//import java.net.URI;
+//import java.net.http.HttpClient;
+//import java.net.http.HttpRequest;
+//import java.net.http.HttpResponse;
+//import java.util.ArrayList;
+//import java.util.HashMap;
+//import java.util.List;
+//import java.util.Map;
+//
+//import entity.Food;
+//import org.json.JSONObject;
+//import org.json.JSONArray;
+//
+//public class FoodDatabaseAccessObject {
+//    private final String APP_ID = "f4d052b7";
+//    private final String APP_KEY = "46cfeab6f40ed5e084106e0870f61131";
+//    private final String BASE_URL = "https://api.edamam.com/api/food-database/v2";
+//    private final HttpClient httpClient;
+//
+//    public FoodDatabaseAccessObject() {
+//        this.httpClient = HttpClient.newHttpClient();
+//    }
+//
+//    public List<Food> searchFoodWithIngredient(String ingredient) throws Exception {
+//        String encodedIngredient = java.net.URLEncoder.encode(ingredient, "UTF-8");
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&nutrition-type=logging&ingr=%s",
+//                BASE_URL, APP_ID, APP_KEY, encodedIngredient);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        return parseSearchResults(new JSONObject(response.body()));
+//    }
+//
+//    private List<Food> parseSearchResults(JSONObject response) {
+//        List<Food> foods = new ArrayList<>();
+//        JSONArray hints = response.getJSONArray("hints");
+//
+//        for (int i = 0; i < Math.min(hints.length(), 3); i++) {
+//            JSONObject foodData = hints.getJSONObject(i).getJSONObject("food");
+//
+//            String foodId = foodData.getString("foodId");
+//            String label = foodData.getString("label");
+//            String category = foodData.optString("category", "N/A");
+//
+//            Map<String, Double> nutrients = new HashMap<>();
+//            JSONObject nutrientsJson = foodData.getJSONObject("nutrients");
+//            nutrients.put("ENERC_KCAL", nutrientsJson.optDouble("ENERC_KCAL", 0.0));
+//            nutrients.put("PROCNT", nutrientsJson.optDouble("PROCNT", 0.0));
+//            nutrients.put("FAT", nutrientsJson.optDouble("FAT", 0.0));
+//            nutrients.put("CHOCDF", nutrientsJson.optDouble("CHOCDF", 0.0));
+//
+//            foods.add(new Food(foodId, label, category, nutrients));
+//        }
+//
+//        return foods;
+//    }
+//}
+
+
+//
+//package data_access;
+//
+//import java.net.URI;
+//import java.net.http.HttpClient;
+//import java.net.http.HttpRequest;
+//import java.net.http.HttpResponse;
+//import org.json.JSONObject;
+//import org.json.JSONArray;
+//
+//public class FoodDatabaseAccessObject {
+//    private final String APP_ID = "f4d052b7";
+//    private final String APP_KEY = "46cfeab6f40ed5e084106e0870f61131";
+//    private final String BASE_URL = "https://api.edamam.com/api/food-database/v2";
+//    private final HttpClient httpClient;
+//
+//    public FoodDatabaseAccessObject() {
+//        this.httpClient = HttpClient.newHttpClient();
+//    }
+//
+//    public JSONObject searchFood() throws Exception {
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&nutrition-type=logging",
+//                BASE_URL, APP_ID, APP_KEY);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        return new JSONObject(response.body());
+//    }
+//
+//    public JSONObject searchFoodWithIngredient(String ingredient) throws Exception {
+//        String encodedIngredient = java.net.URLEncoder.encode(ingredient, "UTF-8");
+//        String endpoint = String.format("%s/parser?app_id=%s&app_key=%s&nutrition-type=logging&ingr=%s",
+//                BASE_URL, APP_ID, APP_KEY, encodedIngredient);
+//
+//        HttpRequest request = HttpRequest.newBuilder()
+//                .uri(URI.create(endpoint))
+//                .header("accept", "application/json")
+//                .GET()
+//                .build();
+//
+//        HttpResponse<String> response = httpClient.send(request,
+//                HttpResponse.BodyHandlers.ofString());
+//
+//        if (response.statusCode() != 200) {
+//            throw new Exception("API request failed with status: " + response.statusCode());
+//        }
+//
+//        return new JSONObject(response.body());
+//    }
+//
+//    public void printFoodItems(JSONObject response) {
+//        JSONArray hints = response.getJSONArray("hints");
+//        for (int i = 0; i < hints.length(); i++) {
+//            JSONObject food = hints.getJSONObject(i).getJSONObject("food");
+//            System.out.println("Label: " + food.getString("label"));
+//            System.out.println("Category: " + food.optString("category", "N/A"));
+//
+//            JSONObject nutrients = food.getJSONObject("nutrients");
+//            System.out.println("Nutrients:");
+//            System.out.println("  - ENERC_KCAL: " + nutrients.optDouble("ENERC_KCAL", 0.0));
+//            System.out.println("  - PROCNT: " + nutrients.optDouble("PROCNT", 0.0));
+//            System.out.println("  - FAT: " + nutrients.optDouble("FAT", 0.0));
+//            System.out.println("  - CHOCDF: " + nutrients.optDouble("CHOCDF", 0.0));
+//            System.out.println("--------------------");
+//        }
+//    }
+//}
+
 package data_access;
 
 import java.net.URI;
@@ -57,22 +527,4 @@
 
         return new JSONObject(response.body());
     }
-
-    // parse food items from response
-    public void printFoodItems(JSONObject response) {
-        JSONArray hints = response.getJSONArray("hints");
-        for (int i = 0; i < hints.length(); i++) {
-            JSONObject food = hints.getJSONObject(i).getJSONObject("food");
-            System.out.println("Label: " + food.getString("label"));
-            System.out.println("Category: " + food.optString("category", "N/A"));
-
-            JSONObject nutrients = food.getJSONObject("nutrients");
-            System.out.println("Nutrients:");
-            System.out.println("  - ENERC_KCAL: " + nutrients.optDouble("ENERC_KCAL", 0.0));
-            System.out.println("  - PROCNT: " + nutrients.optDouble("PROCNT", 0.0));
-            System.out.println("  - FAT: " + nutrients.optDouble("FAT", 0.0));
-            System.out.println("  - CHOCDF: " + nutrients.optDouble("CHOCDF", 0.0));
-            System.out.println("--------------------");
-        }
-    }
 }
\ No newline at end of file
Index: src/interface_adapter/dashboard/DashboardPresenter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package interface_adapter.dashboard;\n\nimport interface_adapter.ViewManagerModel;\nimport interface_adapter.info_collection.InfoCollectionViewModel;\nimport use_case.dashboard.DashboardOutputBoundary;\nimport use_case.dashboard.DashboardOutputData;\n\nimport java.util.EnumMap;\n\npublic class DashboardPresenter implements DashboardOutputBoundary {\n    private final DashboardViewModel dashboardViewModel;\n    private final ViewManagerModel viewManagerModel;\n    private final InfoCollectionViewModel infoCollectionViewModel;\n\n    public DashboardPresenter(ViewManagerModel viewManagerModel,\n                              DashboardViewModel dashboardViewModel,\n                              InfoCollectionViewModel infoCollectionViewModel) {\n        this.viewManagerModel = viewManagerModel;\n        this.dashboardViewModel = dashboardViewModel;\n        this.infoCollectionViewModel = new InfoCollectionViewModel();\n    }\n\n    @Override\n    public void prepareSuccessView(DashboardOutputData outputData) {\n        // On success, update the view model state\n        DashboardState dashboardState = new DashboardState();\n\n        // Update with user info\n        dashboardState.setUsername(outputData.getUsername());\n        dashboardState.setBmr(outputData.getBmr());\n        dashboardState.setTdee(outputData.getTdee());\n\n        // Set nutrition goals and progress\n        dashboardState.setDailyCalorieGoal(outputData.getTdee());\n        dashboardState.setCarbsGoalGrams(outputData.getCarbsGoal());\n        dashboardState.setProteinGoalGrams(outputData.getProteinGoal());\n        dashboardState.setFatGoalGrams(outputData.getFatGoal());\n\n        dashboardState.setConsumedCalories(outputData.getConsumedCalories());\n        dashboardState.setConsumedCarbs(outputData.getConsumedCarbs());\n        dashboardState.setConsumedProtein(outputData.getConsumedProtein());\n        dashboardState.setConsumedFat(outputData.getConsumedFat());\n\n        // Additional info\n        dashboardState.setAllergies(outputData.getAllergies());\n        dashboardState.setActivityLevel(outputData.getActivityLevel());\n\n        dashboardViewModel.setState(dashboardState);\n        dashboardViewModel.firePropertyChanged();\n\n        viewManagerModel.setActiveView(dashboardViewModel.getViewName());\n        viewManagerModel.firePropertyChanged();\n    }\n\n    @Override\n    public void prepareSwitchToInfoCollection() {\n        // Switch to info collection view\n        viewManagerModel.setActiveView(infoCollectionViewModel.getViewName());\n        viewManagerModel.firePropertyChanged();\n    }\n\n\n    @Override\n    public void prepareFailView(String error) {\n        DashboardState dashboardState = (DashboardState) dashboardViewModel.getState();\n        dashboardState.setError(error);\n        dashboardViewModel.setState(dashboardState);\n        dashboardViewModel.firePropertyChanged();\n    }\n}
===================================================================
diff --git a/src/interface_adapter/dashboard/DashboardPresenter.java b/src/interface_adapter/dashboard/DashboardPresenter.java
--- a/src/interface_adapter/dashboard/DashboardPresenter.java	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/src/interface_adapter/dashboard/DashboardPresenter.java	(date 1732863091592)
@@ -1,6 +1,7 @@
 package interface_adapter.dashboard;
 
 import interface_adapter.ViewManagerModel;
+import interface_adapter.customize.CustomizeViewModel;
 import interface_adapter.info_collection.InfoCollectionViewModel;
 import use_case.dashboard.DashboardOutputBoundary;
 import use_case.dashboard.DashboardOutputData;
@@ -11,12 +12,14 @@
     private final DashboardViewModel dashboardViewModel;
     private final ViewManagerModel viewManagerModel;
     private final InfoCollectionViewModel infoCollectionViewModel;
+    private final CustomizeViewModel customizeViewModel;
 
     public DashboardPresenter(ViewManagerModel viewManagerModel,
                               DashboardViewModel dashboardViewModel,
-                              InfoCollectionViewModel infoCollectionViewModel) {
+                              InfoCollectionViewModel infoCollectionViewModel, CustomizeViewModel customizeViewModel) {
         this.viewManagerModel = viewManagerModel;
         this.dashboardViewModel = dashboardViewModel;
+        this.customizeViewModel = customizeViewModel;
         this.infoCollectionViewModel = new InfoCollectionViewModel();
     }
 
@@ -58,6 +61,12 @@
         viewManagerModel.setActiveView(infoCollectionViewModel.getViewName());
         viewManagerModel.firePropertyChanged();
     }
+
+    @Override
+    public void prepareSwitchToCustomize() {
+        viewManagerModel.setActiveView(customizeViewModel.getViewName());
+        viewManagerModel.firePropertyChanged();
+    }
 
 
     @Override
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"d9fc2438-211c-42c3-9644-91e5b5a21a3f\" name=\"Changes\" comment=\"\">\n      <change beforePath=\"$PROJECT_DIR$/src/entity/CommonUser.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/entity/CommonUser.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/interface_adapter/ViewModel.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/interface_adapter/ViewModel.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/src/use_case/info_collection/InfoCollectionOutputData.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/use_case/info_collection/InfoCollectionOutputData.java\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/entity/Allergy.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/entity/Allergy.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupState.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupState.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/use_case/login/LoginInteractor.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/use_case/login/LoginInteractor.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LoggedInView$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LoggedInView$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LoggedInView.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LoggedInView.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LoginView$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LoginView$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LoginView$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LoginView$2.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LoginView$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LoginView$3.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/LoginView.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/LoginView.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/SignupView$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/SignupView$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/SignupView$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/SignupView$2.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/SignupView$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/SignupView$3.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/SignupView$4.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/SignupView$4.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/classes/view/SignupView$5.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/view/SignupView$5.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$1.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$2.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$3.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$4.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest.class\" beforeDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$1.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$2.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$3.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$3.class\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest.class\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Merge.Settings\">\n    <option name=\"BRANCH\" value=\"origin/Zihan\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$\" value=\"merge-3-4\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"GitHubPullRequestSearchHistory\">{\n  &quot;lastFilter&quot;: {\n    &quot;state&quot;: &quot;OPEN&quot;,\n    &quot;assignee&quot;: &quot;Chuxuan-a&quot;\n  }\n}</component>\n  <component name=\"GithubPullRequestsUISettings\">{\n  &quot;selectedUrlAndAccountId&quot;: {\n    &quot;url&quot;: &quot;https://github.com/HARDY130/CSC207-Project-Group-18.git&quot;,\n    &quot;accountId&quot;: &quot;cb543040-83d9-4b98-9e8b-34123cdbef69&quot;\n  }\n}</component>\n  <component name=\"ProblemsViewState\">\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 1\n}</component>\n  <component name=\"ProjectId\" id=\"2oggSmZZdFpbdsnR4MnEt9lM0NO\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;JUnit.SignupInteractorTest.executor&quot;: &quot;Coverage&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;InfoCollection__merge__test&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\" selected=\"Application.Main\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"app.Main\" />\n      <module name=\"FinalProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"app.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"SignupInteractorTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\n      <module name=\"FinalProject\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"use_case.signup.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <option name=\"PACKAGE_NAME\" value=\"use_case.signup\" />\n      <option name=\"MAIN_CLASS_NAME\" value=\"use_case.signup.SignupInteractorTest\" />\n      <option name=\"TEST_OBJECT\" value=\"class\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\n      <option name=\"filePath\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"JUnit.SignupInteractorTest\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"JUnit.SignupInteractorTest\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9823dce3aa75-fdfe4dae3a2d-intellij.indexing.shared.core-IU-243.21565.193\" />\n        <option value=\"bundled-js-predefined-d6986cc7102b-e768b9ed790e-JavaScript-IU-243.21565.193\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"d9fc2438-211c-42c3-9644-91e5b5a21a3f\" name=\"Changes\" comment=\"\" />\n      <created>1731296634890</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1731296634890</updated>\n      <workItem from=\"1731296635940\" duration=\"519000\" />\n      <workItem from=\"1731375461438\" duration=\"4000\" />\n      <workItem from=\"1731375756515\" duration=\"14746000\" />\n      <workItem from=\"1731475123823\" duration=\"30000\" />\n      <workItem from=\"1731633154335\" duration=\"177000\" />\n      <workItem from=\"1731633338244\" duration=\"714000\" />\n      <workItem from=\"1731888584395\" duration=\"21618000\" />\n      <workItem from=\"1732212840492\" duration=\"25000\" />\n      <workItem from=\"1732232769601\" duration=\"9228000\" />\n      <workItem from=\"1732510632390\" duration=\"328000\" />\n      <workItem from=\"1732510999617\" duration=\"5341000\" />\n      <workItem from=\"1732516347472\" duration=\"134000\" />\n      <workItem from=\"1732516487250\" duration=\"63000\" />\n      <workItem from=\"1732541316435\" duration=\"5154000\" />\n    </task>\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\n    <expand />\n    <select />\n  </component>\n</project>
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision d6861fad112e70554f96f74f6a8770a86cdcf124)
+++ b/.idea/workspace.xml	(date 1732864923886)
@@ -5,34 +5,88 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="d9fc2438-211c-42c3-9644-91e5b5a21a3f" name="Changes" comment="">
-      <change beforePath="$PROJECT_DIR$/src/entity/CommonUser.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/entity/CommonUser.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/interface_adapter/ViewModel.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/ViewModel.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/use_case/info_collection/InfoCollectionOutputData.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/use_case/info_collection/InfoCollectionOutputData.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/entity/Allergy.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/entity/Allergy.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupState.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupState.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginInteractor.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/use_case/login/LoginInteractor.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LoggedInView$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LoggedInView$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LoggedInView.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LoggedInView.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LoginView$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LoginView$2.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LoginView$3.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/LoginView.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/SignupView$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/SignupView$2.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/SignupView$3.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$4.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/SignupView$4.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$5.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/view/SignupView$5.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$1.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$2.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$3.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest$4.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/login/LoginInteractorTest.class" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/use_case/logout/LogoutInteractorTest.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$1.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$2.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$3.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest$3.class" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/test-classes/use_case/signup/SignupInteractorTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/res/config.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/util/ApiConfig.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/src/view/CustomizeView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/app/AppBuilder.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/AppBuilder.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/app/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/app/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/data_access/FoodDatabaseAccessObject.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/data_access/FoodDatabaseAccessObject.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/interface_adapter/dashboard/DashboardController.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/dashboard/DashboardController.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/interface_adapter/dashboard/DashboardPresenter.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/interface_adapter/dashboard/DashboardPresenter.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/use_case/dashboard/DashboardInputBoundary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/use_case/dashboard/DashboardInputBoundary.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/use_case/dashboard/DashboardInteractor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/use_case/dashboard/DashboardInteractor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/use_case/dashboard/DashboardOutputBoundary.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/use_case/dashboard/DashboardOutputBoundary.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/view/DashboardView.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/view/DashboardView.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/app/AppBuilder.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/app/Main.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/data_access/DBUserDataAccessObject.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/data_access/FileUserDataAccessObject.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/data_access/InMemoryUserDataAccessObject.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/Allergy.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/CommonUser.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/CommonUserFactory.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/User.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/entity/UserFactory.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/ViewManagerModel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/ViewModel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/change_password/ChangePasswordController.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/change_password/ChangePasswordPresenter.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/change_password/LoggedInState.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/change_password/LoggedInViewModel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/info_collection/InfoCollectionController.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/info_collection/InfoCollectionState.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/info_collection/InfoCollectionViewModel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/login/LoginController.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/login/LoginPresenter.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/login/LoginState.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/login/LoginViewModel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/logout/LogoutController.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/logout/LogoutPresenter.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupController.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupPresenter.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupState.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/interface_adapter/signup/SignupViewModel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/change_password/ChangePasswordInputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/change_password/ChangePasswordInputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/change_password/ChangePasswordInteractor.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/change_password/ChangePasswordOutputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/change_password/ChangePasswordOutputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/change_password/ChangePasswordUserDataAccessInterface.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/info_collection/InfoCollectionInputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/info_collection/InfoCollectionInputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/info_collection/InfoCollectionUserDataAccessInterface.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginInputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginInputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginInteractor.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginOutputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginOutputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/login/LoginUserDataAccessInterface.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/logout/LogoutInputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/logout/LogoutInputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/logout/LogoutInteractor.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/logout/LogoutOutputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/logout/LogoutOutputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/logout/LogoutUserDataAccessInterface.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/signup/SignupInputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/signup/SignupInputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/signup/SignupInteractor.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/signup/SignupOutputBoundary.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/signup/SignupOutputData.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/use_case/signup/SignupUserDataAccessInterface.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/LabelTextPanel.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/LoggedInView$1.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/LoggedInView.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView$1.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView$2.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/LoginView.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$1.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$2.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$3.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$4.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView$5.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/SignupView.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/view/ViewManager.class" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -52,7 +106,7 @@
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
       <map>
-        <entry key="$PROJECT_DIR$" value="merge-3-4" />
+        <entry key="$PROJECT_DIR$" value="Zihan-new" />
       </map>
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
@@ -76,27 +130,36 @@
   &quot;associatedIndex&quot;: 1
 }</component>
   <component name="ProjectId" id="2oggSmZZdFpbdsnR4MnEt9lM0NO" />
+  <component name="ProjectLevelVcsManager">
+    <ConfirmationsSetting value="2" id="Add" />
+  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
-    &quot;JUnit.SignupInteractorTest.executor&quot;: &quot;Coverage&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
-    &quot;git-widget-placeholder&quot;: &quot;InfoCollection__merge__test&quot;,
-    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
-    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
-    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
-    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
-    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,
-    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  <component name="PropertiesComponent"><![CDATA[{
+  "keyToString": {
+    "Application.Main.executor": "Run",
+    "JUnit.SignupInteractorTest.executor": "Coverage",
+    "RunOnceActivity.ShowReadmeOnStart": "true",
+    "RunOnceActivity.git.unshallow": "true",
+    "git-widget-placeholder": "dashboard-planner",
+    "kotlin-language-version-configured": "true",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.tslint": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.tslint": "(autodetect)",
+    "nodejs_package_manager_path": "npm",
+    "settings.editor.selected.configurable": "preferences.pluginManager",
+    "vue.rearranger.settings.migration": "true"
   }
-}</component>
+}]]></component>
+  <component name="RecentsManager">
+    <key name="MoveFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$/src/res" />
+      <recent name="$PROJECT_DIR$/src/util" />
+    </key>
+  </component>
   <component name="RunManager" selected="Application.Main">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="app.Main" />
@@ -135,10 +198,10 @@
     <recent_temporary>
       <list>
         <item itemvalue="Application.Main" />
+        <item itemvalue="JUnit.SignupInteractorTest" />
         <item itemvalue="JUnit.SignupInteractorTest" />
         <item itemvalue="Application.Main" />
         <item itemvalue="Application.Main" />
-        <item itemvalue="JUnit.SignupInteractorTest" />
       </list>
     </recent_temporary>
   </component>
@@ -188,6 +251,9 @@
         </entry>
       </map>
     </option>
+  </component>
+  <component name="VcsManagerConfiguration">
+    <option name="LAST_COMMIT_MESSAGE" value="" />
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
